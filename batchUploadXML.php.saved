<?php
/*
 * Created on 18/mag/08
 *
 * To change the template for this generated file go to
 * Window - Preferences - PHPeclipse - PHP - Code Templates
*/
//include "login/autentication.php";
include('/xamppNew/xampp/htdocs/mibac/login/configsess.php');
require_once('dbfunctions.php');
function updateProtocollo($protocollo){
	$dreg=$protocollo['DataRegistrazione'][1];
	$nreg=$protocollo['NumeroRegistrazione'][1];
	$dbTab='pratiche';
	if ($qResult=dbselect('select * from '.$dbTab.' where numeroregistrazione = \''.$nreg.'\'')){
		$updQuery=' update '.$dbTab.' set ';
		$endQuery=' where numeroregistrazione = \''.$nreg.'\'';
		$qToken='';
		$uoIndex=0;
		foreach ($protocollo as $key => $value){
			$fieldNames = '';
			$fieldValues = '';
			if ($key=='UnitaOrganizzativa'){

				for ($index = 0; $index < sizeof($value); $index++) {
					$zonaQuery="select zona, tipo from arc_zone where tipo = 'Z' and description = '".str_replace("'","\'",$value[$index]['Denominazione'])."'";					$zonaResult=dbselect($zonaQuery);
					if ($index==0){
						$fieldNames ='uodenominazione';
						$fieldValues ="'".addslashes($value[$index]['Denominazione'])."'";
					} elseif ($index==1){
						$fieldNames ='cladenominazione';
						$fieldValues ="'".addslashes($value[$index]['Denominazione'])."'";
					}
					if ($value[$index]['Oggetto']> '' and $index==0) {
						$fieldNames ='oggetto';
						$fieldValues ="'".addslashes($value[$index]['Oggetto'])."'";
					}
					if($zonaResult['NROWS']>0 and $index==0){
							$fieldNames ='zona';
							$fieldValues =$zonaResult['ROWS'][0]['zona'];
					}

				}

			} else {
				if(!is_null($value[1])){
					if ($value[0]=='dataregistrazione'){
						$fieldNames = $value[0];
						$fieldValues = "str_to_date('".$value[1]."','%d-%m-%Y')";
					} else {
						$fieldNames = $value[0];
						$fieldValues = "'".addslashes($value[1])."'";
					}
				}
			}
			$updQuery .=  $fieldNames > '' ?$qToken.$fieldNames . '=' . $fieldValues:'';
			$qToken = ' , ';
		}
		$updQuery .= $endQuery;
		return dbupdate($updQuery);

	} else {
		$fieldNames='anno, ';
		$fieldValues=date('Y').", ";
		$qToken='';
		$uoIndex=0;
		foreach ($protocollo as $key => $value){
			if ($key=='UnitaOrganizzativa'){
				for ($index = 0; $index < sizeof($value); $index++) {
					$zonaQuery="select zona, tipo from arc_zone where tipo = 'Z' and description = '".str_replace("'","\'",$value[$index]['Denominazione'])."'";					$zonaResult=dbselect($zonaQuery);
					if ($index==0){
						$fieldNames.=$qToken.'uodenominazione';
						$fieldValues.=$qToken."'".addslashes($value[$index]['Denominazione'])."'";
					} elseif ($index==1){
						$fieldNames.=$qToken.'cladenominazione';
						$fieldValues.=$qToken."'".addslashes($value[$index]['Denominazione'])."'";
					}
					if ($value[$index]['Oggetto']> '' and $index==0 ) {
						$fieldNames.=$qToken.'oggetto';
						$fieldValues.=$qToken."'".addslashes($value[$index]['Oggetto'])."'";
					}
					if($zonaResult['NROWS']>0 and $index==0){
							$fieldNames.=$qToken.'zona';
							$fieldValues.=$qToken.$zonaResult['ROWS'][0]['zona'];
					}
				}

			} else {
				if(!is_null($value[1])){
					if ($value[0]=='dataregistrazione'){
						$fieldNames.=$qToken.$value[0];
						$fieldValues.=$qToken."str_to_date('".$value[1]."','%d-%m-%Y')";
					} else {
						$fieldNames.=$qToken.$value[0];
						$fieldValues.=$qToken."'".addslashes($value[1])."'";
					}
				}
			}
			$qToken = ' , ';
		}
		$insQuery='insert into '.$dbTab.' ('.$fieldNames.') values ( '.$fieldValues.' )';
		return dbupdate($insQuery);

	}

}

//include("pageheader.inc");
print('Importazione del '.date('d-m-Y')."\n");

if ($handle = opendir('/xamppNew/xampp/htdocs/mibac/dacaricare')) {
    while (false !== ($filename = readdir($handle))) {
        if ($filename != "." && $filename != "..") {
        	$fileInfo=pathinfo($filename);
        	if(strtoupper($fileInfo['extension'])=='ZIP') {
        		print('Caricamento File '.$filename.'</br>'."\n");
				$zip= zip_open('/xamppNew/xampp/htdocs/mibac/dacaricare/'.$filename);
				if ($zip) {
				    while ($zip_entry = zip_read($zip)) {
				        //echo "Name:               " . zip_entry_name($zip_entry) . "</br>\n";
				        //echo "Actual Filesize:    " . zip_entry_filesize($zip_entry) . "\n";
				        //echo "Compressed Size:    " . zip_entry_compressedsize($zip_entry) . "\n";
				        //echo "Compression Method: " . zip_entry_compressionmethod($zip_entry) . "\n";
				        if (zip_entry_open($zip, $zip_entry, "r")) {
				            //echo "File Contents:\n";
				            $buf = zip_entry_read($zip_entry, zip_entry_filesize($zip_entry));
							$dom = new DOMDocument();
							$dom->loadXML($buf);
							$found = $dom->getElementsByTagName("Segnatura");
							foreach ($found as $nodeSegnatura) {
										$protoStruct=array(
											'NumeroRegistrazione' => array (0 => 'numeroregistrazione'),
											'DataRegistrazione' => array (0 => 'dataregistrazione'),
											'Nome' => array (0 => 'nome'),
											'Cognome' => array (0 => 'cognome'),
											'Titolo' => array (0 => 'titolo'),
											'CodiceFiscale' => array (0 => 'codicefiscale'),
											'Toponimo' => array (0 => 'toponimo'),
											'Civico' => array (0 => 'civico'),
											'Cap' => array (0 => 'cap'),
											'Comune' => array (0 => 'comune'),
											'Provincia' => array (0 => 'provincia'),
											'Localita' => array (0 => 'localita'),
											'Nazione' => array (0 => 'nazione'),
											'Telefono' => array (0 => 'telefono'),
											'Fax' => array (0 => 'fax'),
											'UnitaOrganizzativa' => array(),
											'Oggetto' => array (0 => 'descrizione'),
											'1' => array (0 => 'fasidentificativo'),
											'2' => array (0 => 'fasoggetto'),
											'DataDocumento' => array (0 => 'datadocumento'),
											'DataArrivo' => array (0 => 'dataarrivo'),
											'NumeroRiferimento' => array (0 => 'numeroriferimento'),
											'Classifica' => array (0 => 'classifica'),
											'AllegatNumero' => array (0 => 'allegatinumero'),
											'IdScheda' => array (0 => 'idscheda'),
											'Mappale' => array (0 => 'mappale'),
											'Foglio' => array (0 => 'foglio'),
											'Anagrafic' => array (0 => 'anagrafico'),
											'Scadenza' => array (0 => 'scadenza'),
											'DocStampato' => array (0 => 'docstampato'),
											'DataStmp' => array (0 => 'datastmp'),
											'Condizione' => array (0 => 'condizione'),
											'Utente' => array (0 => 'pnome'),
											'3' => array (0 => 'ptoponimo'),
											'4' => array (0 => 'pcivico'),
											'5' => array (0 => 'pcap'),
											'6' => array (0 => 'pcomune'),
											'7' => array (0 => 'pprovincia'),
											'8' => array (0 => 'comuneogg'),
											'9' => array (0 => 'vincolo')
										);
								        if ($nodeSegnatura->hasChildNodes()) {
									            foreach ($nodeSegnatura->childNodes as $nodo) {
									                switch ($nodo->nodeName) {
														case 'Intestazione':
															foreach ($nodo->childNodes as $nodoIntestazione){
																switch ($nodoIntestazione->nodeName) {
																	case 'Identificatore':
																		foreach	($nodoIntestazione->childNodes as $nodoIdentificatore){
																			switch ($nodoIdentificatore->nodeName) {
																				case 'CodiceAmministrazione':
																					$protoStruct['CodiceAmministrazione'][]=$nodoIdentificatore->nodeValue;
																					break;
																				case 'NumeroRegistrazione':
																					$protoStruct['NumeroRegistrazione'][]=$nodoIdentificatore->nodeValue;
																					break;
																				case 'DataRegistrazione':
																					$protoStruct['DataRegistrazione'][]=$nodoIdentificatore->nodeValue;
																					break;
																			}
																		}
																		break;
																	case 'Origine':
																		foreach	($nodoIntestazione->childNodes as $nodoOrigine){
																			switch ($nodoOrigine->nodeName) {
																				case 'Mittente':
																					foreach ($nodoOrigine->childNodes as $nodoMittente){
																						switch ($nodoMittente->nodeName) {
																							case 'Nome':
																								$protoStruct['Nome'][]=$nodoMittente->nodeValue;
																								break;
																							case 'Cognome':
																								$protoStruct['Cognome'][]=$nodoMittente->nodeValue;
																								break;
																							case 'Titolo':
																								$protoStruct['Titolo'][]=$nodoMittente->nodeValue;
																								break;
																							case 'CodiceFiscale':
																								$protoStruct['CodiceFiscale'][]=$nodoMittente->nodeValue;
																								break;
																							case 'IndirizzoPostale':
																								if ($nodoMittente->hasChildNodes()){
																									foreach ($nodoMittente->childNodes as $indirizzoPostale){
																										switch ($indirizzoPostale->nodeName) {
																											case 'Toponimo':
																												$protoStruct['Toponimo'][]=$indirizzoPostale->nodeValue;
																												break;
																											case 'Civico':
																												$protoStruct['Civico'][]=$indirizzoPostale->nodeValue;
																												break;
																											case 'Cap':
																												$protoStruct['Cap'][]=$indirizzoPostale->nodeValue;
																												break;
																											case 'Cap':
																												$protoStruct['Cap'][]=$indirizzoPostale->nodeValue;
																												break;
																											case 'Comune':
																												$protoStruct['Comune'][]=$indirizzoPostale->nodeValue;
																												break;
																											case 'Provincia':
																												$protoStruct['Provincia'][]=$indirizzoPostale->nodeValue;
																												break;
																											case 'Localita':
																												$protoStruct['Localita'][]=$indirizzoPostale->nodeValue;
																												break;
																											case 'Nazione':
																												$protoStruct['Nazione'][]=$indirizzoPostale->nodeValue;
																												break;
																											case 'Telefono':
																												$protoStruct['Telefono'][]=$indirizzoPostale->nodeValue;
																												break;
																											case 'Fax':
																												$protoStruct['Fax'][]=$indirizzoPostale->nodeValue;
																												break;																																												}
																									}
																								}
																								break;
																						}
																					}
																			}
																		}
																		break;
																	case 'UnitaOrganizzativa':
																		if ($nodoIntestazione->hasChildNodes()){
																			$uoNode=array();
																			foreach ($nodoIntestazione->childNodes as $unitaOrg){
																				if ($unitaOrg->nodeName == 'Denominazione'){
																					$uoNode['Denominazione']=$unitaOrg->nodeValue;
																				} elseif ($unitaOrg->nodeName == 'OggettoDiCompetenza') {
																					$uoNode['Oggetto']=$unitaOrg->nodeValue;
																				}
																			}
																		}
																		$protoStruct['UnitaOrganizzativa'][]=$uoNode;
																		break;
																}
															}

															break;


														default:
															break;
													}

									            }
									        }
								if (updateProtocollo($protoStruct)){
									print('Caricata La registrazione '.$protoStruct['NumeroRegistrazione'][1].' del '.$protoStruct['DataRegistrazione'][1]."\n");
								}
							}
				            zip_entry_close($zip_entry);
				        }
				    }
				    zip_close($zip);
				}
	        	copy('/xamppNew/xampp/htdocs/mibac/dacaricare/'.$filename,'/xamppNew/xampp/htdocs/mibac/caricati/'.$filename);
	        	unlink('/xamppNew/xampp/htdocs/mibac/dacaricare/'.$filename);
        	}
        }
    }
    closedir($handle);
}
//include "pagefooter.inc";
?>
